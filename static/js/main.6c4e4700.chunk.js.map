{"version":3,"sources":["shared.js","Spin.js","DataCreateForm.js","DataTable.js","DataDistribution.js","App.js","serviceWorker.js","index.js"],"names":["categories","whWords","saveFile","data","contentType","fileName","arguments","length","undefined","ext","blob","Blob","decodeURIComponent","encodeURI","type","url","URL","createObjectURL","link","document","createElement","setAttribute","event","createEvent","initMouseEvent","window","dispatchEvent","Spin","react_default","a","spin","indicator","icon","style","fontSize","Option","Select","FormItem","Form","Item","TextArea","Input","create","props","getFieldDecorator","form","db","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","paragraphLoading","setParagraphLoading","_useState5","_useState6","questionLoading","setQuestionLoading","_useState7","_useState8","answerLoading","setAnswerLoading","onBlur","fieldName","_ref3","asyncToGenerator","regenerator_default","mark","_callee2","_ref2","value","_props$form","setFieldsValue","res","tokens","wrap","_context2","prev","next","target","abrupt","getFieldValue","split","join","axios","get","concat","headers","Access-Control-Allow-Origin","sent","defineProperty","t0","console","error","finish","stop","this","_x3","apply","es_form","colon","label","rules","required","input","initialValue","es_select","map","category","index","key","onInput","e","textarea","height","Math","min","scrollHeight","src_Spin","disabled","whWord","textAlign","es_button","onClick","validateFields","preventDefault","_ref","_callee","err","values","categoryId","whId","_context","findIndex","wh","collection","add","objectSpread","notification","message","_x","_x2","width","confirm","Modal","DataTable","dataSource","confirmDelete","id","title","onOk","_onOk","doc","delete","onCancel","columns","dataIndex","filters","text","onFilter","record","indexOf","render","_","table","pagination","pageSize","TabPane","Tabs","ProgressTab","numbers","padding","progress","percent","status","format","toFixed","DataDistribution","whNum","dataset","reduce","acc","cur","i","keys","progressTab","sumV","p","c","v","name","tab","DataDistribution_ProgressTab","tabs","defaultActiveKey","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","state","downloading","json","csv","_this2","onSnapshot","querySnapshot","setState","forEach","push","_this$state","JSON","stringify","log","header","fields","obj","field","splice","jsonToCSV","_this3","_this$state2","className","App_TabPane","shape","size","handleDownload","src_DataTable","src_DataCreateForm","src_DataDistribution","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gZAAaA,EAAa,CACxB,UACA,UACA,WACA,WACA,MACA,QACA,gBACA,aACA,SACA,QAGWC,EAAU,CACrB,MACA,OACA,QACA,OACA,iBAGK,SAASC,EAASC,EAAMC,GAAyC,IAA5BC,EAA4BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnB,OAAQG,EAAWH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,MACzDI,EAAO,IAAIC,KAAK,CAACC,mBAAmBC,UAAUV,KAAS,CAAEW,KAAMV,IAC/DW,EAAMC,IAAIC,gBAAiBP,GAC3BQ,EAAOC,SAASC,cAAe,KACrCF,EAAKG,aAAc,OAAQN,GAC3BG,EAAKG,aAAc,WAAYhB,EAAW,IAAMI,GAChD,IAAMa,EAAQH,SAASI,YAAa,eACpCD,EAAME,eAAgB,SAAS,GAAM,EAAMC,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MACjGP,EAAKQ,cAAeJ,gBCxBPK,EAFF,kBAAMC,EAAAC,EAAAT,cAACU,EAAA,EAAD,CAAUC,UAAWH,EAAAC,EAAAT,cAACY,EAAA,EAAD,CAAMlB,KAAK,UAAUmB,MAAO,CAAEC,SAAU,IAAMJ,MAAI,OCGlFK,EAAWC,IAAXD,OACME,EAAaC,IAAnBC,KACAC,EAAaC,IAAbD,SA0IOF,MAAKI,QAALJ,CAxIQ,SAACK,GAAU,IAEtBC,EAEND,EAFFE,KAAQD,kBACRE,EACEH,EADFG,GAH8BC,EAMFC,oBAAS,GANPC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAMzBK,EANyBH,EAAA,GAMhBI,EANgBJ,EAAA,GAAAK,EAOgBN,oBAAS,GAPzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAOzBE,EAPyBD,EAAA,GAOPE,EAPOF,EAAA,GAAAG,EAQcV,oBAAS,GARvBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAQzBE,EARyBD,EAAA,GAQRE,EARQF,EAAA,GAAAG,EASUd,oBAAS,GATnBe,EAAAb,OAAAC,EAAA,EAAAD,CAAAY,EAAA,GASzBE,EATyBD,EAAA,GASVE,EATUF,EAAA,GAuC1BG,EAAS,SAACC,EAAWd,GAAZ,sBAAAe,EAAAlB,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAAzC,EAAA0C,KAA2B,SAAAC,EAAAC,GAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAzC,EAAAkD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAmBR,EAAnBD,EAASU,OAAUT,MAAnB,CAAAM,EAAAE,KAAA,eAAAF,EAAAI,OAAA,oBAAAJ,EAAAC,KAAA,EAAAN,EAGchC,EAA5CE,KAAQ+B,EAHsBD,EAGtBC,iBAAgBS,EAHMV,EAGNU,eACAlB,IAAc,IAChCmB,MAAM,KAAKC,KAAK,MAAQb,EALA,CAAAM,EAAAE,KAAA,eAAAF,EAAAI,OAAA,wBAMtC/B,GAAW,GAN2B2B,EAAAE,KAAA,GAOpBM,IAAMC,IAAN,+CAAAC,OAAyDhB,GAAS,CAClFiB,QAAS,CACPC,8BAA+B,OATG,QAOhCf,EAPgCG,EAAAa,KAYtBf,EAAaD,EAArB1E,KAAQ2E,OAChBF,EAAe1B,OAAA4C,EAAA,EAAA5C,CAAA,GAAGiB,EAAYW,IAbQE,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAe,GAAAf,EAAA,SAetCgB,QAAQC,MAARjB,EAAAe,IAfsC,eAAAf,EAAAC,KAAA,GAiBtC5B,GAAW,GAjB2B2B,EAAAkB,OAAA,6BAAAlB,EAAAmB,SAAA3B,EAAA4B,KAAA,mBAA3B,gBAAAC,GAAA,OAAAjC,EAAAkC,MAAAF,KAAA9F,YAAA,IA2Bf,OACEsB,EAAAC,EAAAT,cAACmF,EAAA,EAAD,KACE3E,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAM,cAC3B7D,EAAkB,YAAa,CAC9B8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACwF,EAAA,EAAD,QAELhF,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAM,WAC3B7D,EAAkB,UAAW,CAC5B8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACwF,EAAA,EAAD,QAELhF,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAM,YAC3B7D,EAAkB,WAAY,CAC7BiE,aAAc,UACdH,MAAO,CAAC,CAAEC,UAAU,KAFrB/D,CAGEhB,EAAAC,EAAAT,cAAC0F,EAAA,EAAD,KACA9G,EAAW+G,IAAI,SAACC,EAAUC,GAAX,OAAqBrF,EAAAC,EAAAT,cAACe,EAAD,CAAQuC,MAAOsC,EAAUE,IAAKD,GAAQD,QAG/EpF,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAM,aAC3B7D,EAAkB,YAAa,CAC9B8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACoB,EAAD,CAAU2E,QA7BI,SAAAC,GACrB,IAAMC,EAAWD,EAAEjC,OACnBkC,EAASpF,MAAMqF,OAAS,GACxBD,EAASpF,MAAMqF,OAASC,KAAKC,IAAIH,EAASI,aAAc,KAAO,MA0BrBvD,OAAQA,EAAO,kBAAmBT,OAE1E7B,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAO7E,EAAAC,EAAAT,cAAA,gCAAwBoC,GAAoB5B,EAAAC,EAAAT,cAACsG,EAAD,QACxE9E,EAAkB,kBAAmB,CACpC8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACoB,EAAD,CAAUmF,UAAQ,MAEvB/F,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAM,WAC3B7D,EAAkB,KAAM,CACvBiE,aAAc,MACdH,MAAO,CAAC,CAAEC,UAAU,KAFrB/D,CAGEhB,EAAAC,EAAAT,cAAC0F,EAAA,EAAD,KACA7G,EAAQ8G,IAAI,SAACa,EAAQX,GAAT,OAAoBrF,EAAAC,EAAAT,cAACe,EAAD,CAAQuC,MAAOkD,EAAQV,IAAKD,GAAQW,QAGzEhG,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAM,YAC3B7D,EAAkB,WAAY,CAC7B8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACwF,EAAA,EAAD,CAAO1C,OAAQA,EAAO,iBAAkBL,OAE7CjC,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAO7E,EAAAC,EAAAT,cAAA,+BAAuBwC,GAAmBhC,EAAAC,EAAAT,cAACsG,EAAD,QACtE9E,EAAkB,iBAAkB,CACnC8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACwF,EAAA,EAAD,CAAOe,UAAQ,MAEpB/F,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAM,UAC3B7D,EAAkB,SAAU,CAC3B8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACwF,EAAA,EAAD,CAAO1C,OAAQA,EAAO,eAAgBD,OAE3CrC,EAAAC,EAAAT,cAACiB,EAAD,CAAUmE,OAAO,EAAOC,MAAO7E,EAAAC,EAAAT,cAAA,6BAAqB4C,GAAiBpC,EAAAC,EAAAT,cAACsG,EAAD,QAClE9E,EAAkB,eAAgB,CACjC8D,MAAO,CAAC,CAAEC,UAAU,KADrB/D,CAEEhB,EAAAC,EAAAT,cAACwF,EAAA,EAAD,CAAOe,UAAQ,MAEpB/F,EAAAC,EAAAT,cAACiB,EAAD,CAAUJ,MAAO,CAAE4F,UAAW,WAC5BjG,EAAAC,EAAAT,cAAC0G,EAAA,EAAD,CACEC,QAnHa,SAACX,GAAM,IACVY,EAAqBrF,EAA7BE,KAAQmF,eAChBZ,EAAEa,iBACFD,EAAc,eAAAE,EAAAhF,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAAzC,EAAA0C,KAAC,SAAA4D,EAAOC,EAAKC,GAAZ,IAAAC,EAAAC,EAAA,OAAAjE,EAAAzC,EAAAkD,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,WACTkD,EADS,CAAAI,EAAAtD,KAAA,eAAAsD,EAAApD,OAAA,wBAEPkD,EAAatI,EAAWyI,UAAU,SAACzB,GAAD,OAAcA,IAAaqB,EAAOrB,WACpEuB,EAAOtI,EAAQwI,UAAU,SAACb,GAAD,OAAYA,IAAWS,EAAOK,KAHhDF,EAAAvD,KAAA,EAKX5B,GAAW,GALAmF,EAAAtD,KAAA,EAMLpC,EAAG6F,WAAW,WAAWC,IAAzB1F,OAAA2F,EAAA,EAAA3F,CAAA,GACDmF,EADC,CAEJC,aACAC,UATS,OAWXO,IAAY,QAAY,CACtBC,QAAS,6BAZAP,EAAAtD,KAAA,iBAAAsD,EAAAvD,KAAA,GAAAuD,EAAAzC,GAAAyC,EAAA,SAeXxC,QAAQC,MAARuC,EAAAzC,IACA+C,IAAY,MAAU,CACpBC,QAAS,4CAjBA,eAAAP,EAAAvD,KAAA,GAoBX5B,GAAW,GApBAmF,EAAAtC,OAAA,6BAAAsC,EAAArC,SAAAgC,EAAA/B,KAAA,mBAAD,gBAAA4C,EAAAC,GAAA,OAAAf,EAAA5B,MAAAF,KAAA9F,YAAA,KAiHR2B,MAAO,CAAEiH,MAAO,IAAK5B,OAAQ,IAC7BxG,KAAK,UACLsC,QAASA,GAJX,6BCnIF+F,EAAUC,IAAMD,QAmEPE,EAjEG,SAAAnB,GAAiC,IAA9BoB,EAA8BpB,EAA9BoB,WAAYlG,EAAkB8E,EAAlB9E,QAASN,EAASoF,EAATpF,GAClCyG,EAAgB,SAACC,GAAD,OAAQ,WAC5BL,EAAQ,CACNM,MAAO,oCACPC,KAAI,eAAAC,EAAAzG,OAAAmB,EAAA,EAAAnB,CAAAoB,EAAAzC,EAAA0C,KAAE,SAAA4D,IAAA,OAAA7D,EAAAzC,EAAAkD,KAAA,SAAAyD,GAAA,cAAAA,EAAAvD,KAAAuD,EAAAtD,MAAA,cAAAsD,EAAAvD,KAAA,EAAAuD,EAAAtD,KAAA,EAEIpC,EAAG6F,WAAW,WAAWiB,IAAIJ,GAAIK,SAFrC,OAGFf,IAAY,QAAY,CACtBC,QAAS,+BAJTP,EAAAtD,KAAA,gBAAAsD,EAAAvD,KAAA,EAAAuD,EAAAzC,GAAAyC,EAAA,SAOFxC,QAAQC,MAARuC,EAAAzC,IACA+C,IAAY,MAAU,CACpBC,QAAS,4CATT,yBAAAP,EAAArC,SAAAgC,EAAA/B,KAAA,YAAF,yBAAAuD,EAAArD,MAAAF,KAAA9F,YAAA,GAaJwJ,SAAU,iBAIRC,EAAU,CAAC,CACfN,MAAO,aACPO,UAAW,YACX9C,IAAK,aACJ,CACDuC,MAAO,UACPO,UAAW,UACX9C,IAAK,WACJ,CACDuC,MAAO,WACPO,UAAW,WACX9C,IAAK,WACL+C,QAASjK,EAAW+G,IAAI,SAACC,GAAD,MAAe,CAAEkD,KAAMlD,EAAUtC,MAAOsC,KAChEmD,SAAU,SAACzF,EAAO0F,GAAR,OAAsD,IAAnCA,EAAOpD,SAASqD,QAAQ3F,KACpD,CACD+E,MAAO,YACPO,UAAW,YACX9C,IAAK,aACJ,CACDuC,MAAO,UACPO,UAAW,KACX9C,IAAK,KACL+C,QAAShK,EAAQ8G,IAAI,SAACa,GAAD,MAAa,CAAEsC,KAAMtC,EAAQlD,MAAOkD,KACzDuC,SAAU,SAACzF,EAAO0F,GAAR,OAAgD,IAA7BA,EAAO1B,GAAG2B,QAAQ3F,KAC9C,CACD+E,MAAO,WACPO,UAAW,WACX9C,IAAK,YACJ,CACDuC,MAAO,SACPO,UAAW,SACX9C,IAAK,UAEP,CACEuC,MAAO,SACPvC,IAAK,SACLoD,OAAQ,SAACC,EAAD9F,GAAA,IAAM+E,EAAN/E,EAAM+E,GAAN,OAAe5H,EAAAC,EAAAT,cAAC0G,EAAA,EAAD,CAAQ9F,KAAK,SAASlB,KAAK,SAASiH,QAASwB,EAAcC,QAGpF,OACE5H,EAAAC,EAAAT,cAACoJ,EAAA,EAAD,CAAOlB,WAAYA,EAAYS,QAASA,EAASU,WAAY,CAAEC,SAAU,GAAKtH,QAASA,cC9DnFuH,EAAYC,IAAZD,QAEFE,EAAc,SAAClI,GAAU,IACnB0F,EAAoB1F,EAApB0F,OAAQyC,EAAYnI,EAAZmI,QAChB,OACMlJ,EAAAC,EAAAT,cAAA,OAAKa,MAAO,CAAE8I,QAAS,cACrBnJ,EAAAC,EAAAT,cAAA,WACKnB,EAAQ,GADb,SAAAyF,OACuBoF,EAAQ,IAD/B,IAEIlJ,EAAAC,EAAAT,cAAC4J,EAAA,EAAD,CAAUC,QAAS5C,EAAO,GAAI6C,OAAQ,SAAUC,OAAQ,SAAAF,GAAO,SAAAvF,OAAOuF,EAAQG,QAAQ,GAAvB,UAEnExJ,EAAAC,EAAAT,cAAA,WACKnB,EAAQ,GADb,SAAAyF,OACuBoF,EAAQ,IAD/B,IAEIlJ,EAAAC,EAAAT,cAAC4J,EAAA,EAAD,CAAUC,QAAS5C,EAAO,GAAI6C,OAAQ,SAAUC,OAAQ,SAAAF,GAAO,SAAAvF,OAAOuF,EAAQG,QAAQ,GAAvB,UAEnExJ,EAAAC,EAAAT,cAAA,WACKnB,EAAQ,GADb,SAAAyF,OACuBoF,EAAQ,IAD/B,IAEIlJ,EAAAC,EAAAT,cAAC4J,EAAA,EAAD,CAAUC,QAAS5C,EAAO,GAAI6C,OAAQ,SAAUC,OAAQ,SAAAF,GAAO,SAAAvF,OAAOuF,EAAQG,QAAQ,GAAvB,UAEnExJ,EAAAC,EAAAT,cAAA,WACKnB,EAAQ,GADb,SAAAyF,OACuBoF,EAAQ,IAD/B,IAEIlJ,EAAAC,EAAAT,cAAC4J,EAAA,EAAD,CAAUC,QAAS5C,EAAO,GAAI6C,OAAQ,SAAUC,OAAQ,SAAAF,GAAO,SAAAvF,OAAOuF,EAAQG,QAAQ,GAAvB,UAEnExJ,EAAAC,EAAAT,cAAA,WACKnB,EAAQ,GADb,SAAAyF,OACuBoF,EAAQ,IAD/B,IAEIlJ,EAAAC,EAAAT,cAAC4J,EAAA,EAAD,CAAUC,QAAS5C,EAAO,GAAI6C,OAAQ,SAAUC,OAAQ,SAAAF,GAAO,SAAAvF,OAAOuF,EAAQG,QAAQ,GAAvB,YAqDhEC,EA/CU,SAAC1I,GAAU,IAI1B2I,EAFY3I,EAAX4I,QAEeC,OAAO,SAACC,EAAKC,EAAKC,GAKpC,OAJKF,EAAIC,EAAIpD,WAAW,KACpBmD,EAAIC,EAAIpD,WAAW,GAAK,CAAC,EAAG,EAAG,EAAG,EAAG,IAEzCmD,EAAIC,EAAIpD,WAAW,GAAGoD,EAAInD,MAAQkD,EAAIC,EAAIpD,WAAW,GAAGoD,EAAInD,MAAQ,EAC7DkD,GACR,IAEHH,EAAM,GAAKpI,OAAO0I,KAAKN,GAAOE,OAAO,SAACC,EAAKC,EAAKC,GAC5C,IAAK,IAAI1E,EAAQ,EAAGA,EAAQ,EAAGA,IAC3BwE,EAAIxE,GAASwE,EAAIxE,GAASqE,EAAMI,GAAKzE,GAEzC,OAAOwE,GACR,CAAC,EAAG,EAAG,EAAG,EAAG,IAEhB,IAAMI,EAAc3I,OAAO0I,KAAKN,GAAOvE,IAAI,SAACG,EAAKyE,GAC7C,IAAItD,EAASiD,EAAMpE,GACb4E,EAAOzD,EAAOmD,OAAO,SAACO,EAAGC,EAAGL,GAC9B,OAAOI,EAAIC,GACZ,GACH3D,EAASA,EAAOtB,IAAI,SAAAkF,GAAC,OAAIA,EAAEH,EAAK,MAChC,IAAII,EAAO,UASX,OAPIA,EADQ,MAARhF,EACO,MAEAlH,EAAWkH,EAAI,GAG1BgF,EAAI,GAAAxG,OAAMwG,EAAN,MAAAxG,OAAeoG,EAAf,KAGAlK,EAAAC,EAAAT,cAACuJ,EAAD,CAASwB,IAAKvK,EAAAC,EAAAT,cAAA,YAAO8K,GAAchF,IAAKyE,GACpC/J,EAAAC,EAAAT,cAACgL,EAAD,CAAa/D,OAAQA,EAAQyC,QAASQ,EAAMpE,QAIxD,OACItF,EAAAC,EAAAT,cAACiL,EAAA,EAAD,CAAMC,iBAAiB,KAClBT,ICrELlB,EAAYC,IAAZD,QA2GO4B,cAxGb,SAAAA,EAAY5J,GAAO,IAAA6J,EAAAtJ,OAAAuJ,EAAA,EAAAvJ,CAAAkD,KAAAmG,GACjBC,EAAAtJ,OAAAwJ,EAAA,EAAAxJ,CAAAkD,KAAAlD,OAAAyJ,EAAA,EAAAzJ,CAAAqJ,GAAAK,KAAAxG,KAAMzD,IADW,OAUjBkK,IAASC,cARM,CACbC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,iBAGrBZ,EAAK1J,GAAK+J,IAASQ,YACnBb,EAAKc,MAAQ,CACX/B,QAAS,GACTnI,SAAS,EACTmK,YAAa,CACXC,MAAM,EACNC,KAAK,IAjBQjB,mFAsBC,IAAAkB,EAAAtH,KAClBA,KAAKtD,GAAG6F,WAAW,WAAWgF,WAAW,SAACC,GACxCF,EAAKG,SAAS,CAAEzK,SAAS,IACzB,IAAMmI,EAAU,GAChBqC,EAAcE,QAAQ,SAAClE,GACrB2B,EAAQwC,KAAR7K,OAAA2F,EAAA,EAAA3F,CAAA,GACK0G,EAAIzJ,OADT,CAEEqJ,GAAII,EAAIJ,QAGZkE,EAAKG,SAAS,CAAEtC,UAASnI,SAAS,6CAMvBtC,GAAM,IAAAkN,EACc5H,KAAKkH,MAA9BC,EADWS,EACXT,YAAahC,EADFyC,EACEzC,QAErB,IADsBgC,EAAYzM,GAClC,CAGA,GAFAyM,EAAYzM,IAAQ,EACpBsF,KAAKyH,SAAS,CAACN,gBACF,SAATzM,EAAiB,CAEnB,IAAIX,EAAO8N,KAAKC,UAAU3C,GAC1BvF,QAAQmI,IAAIhO,GAIZD,EAASC,EADW,kCAFH,UACL,aAIP,GAAa,QAATW,EAAgB,CAEzB,IAAIX,ELlCH,SAAmBqN,GAAoB,IAAdY,EAAc9N,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACxC+N,EAASnL,OAAO0I,KAAK4B,EAAK,IAC1BC,EAAMD,EAAKzG,IAAI,SAAAuH,GACjB,OAAOD,EAAOtH,IAAI,SAAAwH,GAChB,OAAOD,EAAIC,KACVhJ,KAAK,OAGV,OADI6I,GAAQX,EAAIe,OAAO,EAAG,EAAGH,GACtBZ,EAAIlI,KAAK,MK0BDkJ,CAAUlD,GAAS,GAC9BvF,QAAQmI,IAAIhO,GAIZD,EAASC,EADW,0BAFH,UACL,OAKdoN,EAAYzM,IAAQ,EACpBsF,KAAKyH,SAAS,CAACN,kDAGR,IAAAmB,EAAAtI,KAAAuI,EACmCvI,KAAKkH,MAAvC/B,EADDoD,EACCpD,QAASnI,EADVuL,EACUvL,QAASmK,EADnBoB,EACmBpB,YACpBjE,EAAaiC,EAAQxE,IAAI,SAAC5G,EAAM8G,GAAP,OAAA/D,OAAA2F,EAAA,EAAA3F,CAAA,GAC1B/C,EAD0B,CAE7B+G,IAAKD,MAEP,OACErF,EAAAC,EAAAT,cAAA,OAAKwN,UAAU,OACfhN,EAAAC,EAAAT,cAACiL,EAAA,EAAD,CAAMC,iBAAiB,KACrB1K,EAAAC,EAAAT,cAACyN,EAAD,CAAS1C,IAAKvK,EAAAC,EAAAT,cAAA,YAAMQ,EAAAC,EAAAT,cAACY,EAAA,EAAD,CAAMlB,KAAK,aAAjB,cAAiDoG,IAAI,KACjEtF,EAAAC,EAAAT,cAAA,OAAKa,MAAO,CAAE8I,QAAS,cACrBnJ,EAAAC,EAAAT,cAAA,oBAEEQ,EAAAC,EAAAT,cAAC0G,EAAA,EAAD,CAAQhH,KAAK,UAAUgO,MAAM,QAAQ9M,KAAK,WAAW+M,KAAK,QAAQH,UAAU,wBAAwB7G,QAAS,SAACX,GAAD,OAAOsH,EAAKM,eAAe,SAAS5L,QAASmK,EAAW,MAArK,QACA3L,EAAAC,EAAAT,cAAC0G,EAAA,EAAD,CAAQhH,KAAK,UAAUgO,MAAM,QAAQ9M,KAAK,WAAW+M,KAAK,QAAQH,UAAU,uBAAuB7G,QAAS,SAACX,GAAD,OAAOsH,EAAKM,eAAe,QAAQ5L,QAASmK,EAAW,KAAnK,QAEF3L,EAAAC,EAAAT,cAAC6N,EAAD,CAAW3F,WAAYA,EAAYlG,QAASA,EAASN,GAAIsD,KAAKtD,OAGlElB,EAAAC,EAAAT,cAACyN,EAAD,CAAS1C,IAAKvK,EAAAC,EAAAT,cAAA,YAAMQ,EAAAC,EAAAT,cAACY,EAAA,EAAD,CAAMlB,KAAK,aAAjB,YAA+CoG,IAAI,KAC/DtF,EAAAC,EAAAT,cAAA,OAAKa,MAAO,CAAE8I,QAAS,eACrBnJ,EAAAC,EAAAT,cAAA,sBACAQ,EAAAC,EAAAT,cAAC8N,EAAD,CAAgBpM,GAAIsD,KAAKtD,OAG7BlB,EAAAC,EAAAT,cAACyN,EAAD,CAAS1C,IAAKvK,EAAAC,EAAAT,cAAA,YAAMQ,EAAAC,EAAAT,cAACY,EAAA,EAAD,CAAMlB,KAAK,cAAjB,qBAAyDoG,IAAI,KACzEtF,EAAAC,EAAAT,cAAA,OAAKa,MAAO,CAAE8I,QAAS,eACrBnJ,EAAAC,EAAAT,cAAA,+BACAQ,EAAAC,EAAAT,cAAC+N,EAAD,CAAkB5D,QAASA,eAhGrB6D,aCEEC,QACW,cAA7B5N,OAAO6N,SAASC,UAEe,UAA7B9N,OAAO6N,SAASC,UAEhB9N,OAAO6N,SAASC,SAASC,MACvB,2DCXNC,IAASnF,OAAO1I,EAAAC,EAAAT,cAACsO,EAAD,MAASvO,SAASwO,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6c4e4700.chunk.js","sourcesContent":["export const categories = [\r\n  'Science',\r\n  'History',\r\n  'Religion',\r\n  'Thailand',\r\n  'Art',\r\n  'Music',\r\n  'International',\r\n  'Technology',\r\n  'Health',\r\n  'Food',\r\n]\r\n\r\nexport const whWords = [\r\n  'Who',\r\n  'When',\r\n  'Where',\r\n  'What',\r\n  'How + Adj/Adv',\r\n]\r\n\r\nexport function saveFile(data, contentType, fileName=\"file\", ext=\"txt\") {\r\n  const blob = new Blob([decodeURIComponent(encodeURI(data))], { type: contentType })\r\n  const url = URL.createObjectURL( blob )\r\n  const link = document.createElement( 'a' )\r\n  link.setAttribute( 'href', url )\r\n  link.setAttribute( 'download', fileName + '.' + ext )\r\n  const event = document.createEvent( 'MouseEvents' )\r\n  event.initMouseEvent( 'click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n  link.dispatchEvent( event )\r\n}\r\n\r\nexport function jsonToCSV(json, header=false) {\r\n  let fields = Object.keys(json[0])\r\n  let csv = json.map(obj => {\r\n    return fields.map(field => {\r\n      return obj[field]\r\n    }).join(',')\r\n  })\r\n  if (header) csv.splice(0, 0, fields)\r\n  return csv.join('\\n')\r\n}","import React from 'react'\nimport { Spin as SpinAntd , Icon } from 'antd'\n\nconst Spin = () => <SpinAntd indicator={<Icon type=\"loading\" style={{ fontSize: 16 }} spin />} />\n\nexport default Spin","import React, { useState } from 'react'\r\nimport { Form, Select, Input, Button, notification } from 'antd'\r\nimport axios from 'axios'\r\nimport { categories, whWords } from './shared'\r\nimport Spin from './Spin'\r\n\r\nconst { Option } = Select\r\nconst { Item: FormItem } = Form\r\nconst { TextArea } = Input\r\n\r\nconst DataCreateForm = (props) => {\r\n  const {\r\n    form: { getFieldDecorator },\r\n    db,\r\n  } = props\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [paragraphLoading, setParagraphLoading] = useState(false)\r\n  const [questionLoading, setQuestionLoading] = useState(false)\r\n  const [answerLoading, setAnswerLoading] = useState(false)\r\n\r\n  const handleSubmit = (e) => {\r\n    const { form: { validateFields } } = props\r\n    e.preventDefault()\r\n    validateFields(async (err, values) => {\r\n      if (err) return\r\n      const categoryId = categories.findIndex((category) => category === values.category)\r\n      const whId = whWords.findIndex((whWord) => whWord === values.wh)\r\n      try {\r\n        setLoading(true)\r\n        await db.collection(\"dataset\").add({\r\n          ...values,\r\n          categoryId,\r\n          whId,\r\n        })\r\n        notification['success']({\r\n          message: 'Data added successfully.',\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n        notification['error']({\r\n          message: 'Something went wrong, please try again.',\r\n        });\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  const onBlur = (fieldName, setLoading) => async ({ target: { value } }) => {\r\n    if (!value) return\r\n    try {\r\n      const { form: { setFieldsValue, getFieldValue } } = props\r\n      const prevValue = getFieldValue(fieldName) || ''\r\n      if (prevValue.split(',').join('') === value) return\r\n      setLoading(true)\r\n      const res = await axios.get(`https://py-thai-tokenizer.herokuapp.com/icu/${value}`, {\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      })\r\n      const { data: { tokens } } = res\r\n      setFieldsValue({ [fieldName]: tokens })\r\n    } catch (err) {\r\n      console.error(err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const resizeTextarea = e => {\r\n    const textarea = e.target\r\n    textarea.style.height = \"\"\r\n    textarea.style.height = Math.min(textarea.scrollHeight, 100) + \"px\"\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <FormItem colon={false} label=\"Article ID\">\r\n        {getFieldDecorator('articleId', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Article\">\r\n        {getFieldDecorator('article', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Category\">\r\n        {getFieldDecorator('category', {\r\n          initialValue: 'Science',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {categories.map((category, index) => <Option value={category} key={index}>{category}</Option>)}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Paragraph\">\r\n        {getFieldDecorator('paragraph', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea onInput={resizeTextarea} onBlur={onBlur('paragraphTokens', setParagraphLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Paragraph Tokens {paragraphLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('paragraphTokens', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea disabled />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"WH Word\">\r\n        {getFieldDecorator('wh', {\r\n          initialValue: 'Who',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {whWords.map((whWord, index) => (<Option value={whWord} key={index}>{whWord}</Option>))}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Question\">\r\n        {getFieldDecorator('question', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('questionTokens', setQuestionLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Question Tokens {questionLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('questionTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input disabled />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Answer\">\r\n        {getFieldDecorator('answer', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('answerTokens', setAnswerLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Answer Tokens {answerLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('answerTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input disabled />)}\r\n      </FormItem>\r\n      <FormItem style={{ textAlign: 'center' }}>\r\n        <Button\r\n          onClick={handleSubmit}\r\n          style={{ width: 100, height: 40 }}\r\n          type=\"primary\"\r\n          loading={loading}\r\n        >Add</Button>\r\n      </FormItem>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default Form.create()(DataCreateForm)\r\n","import React from 'react'\nimport { Table, Button, Modal, notification } from 'antd'\nimport { categories, whWords } from './shared'\n\nconst confirm = Modal.confirm\n\nconst DataTable = ({ dataSource, loading, db }) => {\n  const confirmDelete = (id) => () => {\n    confirm({\n      title: 'Do you want to delete these data?',\n      onOk: async () => {\n        try {\n          await db.collection(\"dataset\").doc(id).delete()\n          notification['success']({\n            message: 'Data deleted successfully.',\n          });\n        } catch (e) {\n          console.error(e)\n          notification['error']({\n            message: 'Something went wrong, please try again.',\n          });\n        }\n      },\n      onCancel: () => {},\n    })\n  }\n  \n  const columns = [{\n    title: 'Article ID',\n    dataIndex: 'articleId',\n    key: 'articleId',\n  }, {\n    title: 'Article',\n    dataIndex: 'article',\n    key: 'article',\n  }, {\n    title: 'Category',\n    dataIndex: 'category',\n    key: 'category',\n    filters: categories.map((category) => ({ text: category, value: category })),\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\n  }, {\n    title: 'Paragraph',\n    dataIndex: 'paragraph',\n    key: 'paragraph',\n  }, {\n    title: 'WH Word',\n    dataIndex: 'wh',\n    key: 'wh',\n    filters: whWords.map((whWord) => ({ text: whWord, value: whWord })),\n    onFilter: (value, record) => record.wh.indexOf(value) === 0,\n  }, {\n    title: 'Question',\n    dataIndex: 'question',\n    key: 'question',\n  }, {\n    title: 'Answer',\n    dataIndex: 'answer',\n    key: 'answer',\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (_, { id }) => <Button icon=\"delete\" type=\"danger\" onClick={confirmDelete(id)} />,\n  }];\n\n  return (\n    <Table dataSource={dataSource} columns={columns} pagination={{ pageSize: 8 }} loading={loading} />\n  )\n}\n\nexport default DataTable\n","import React from 'react'\r\nimport { Tabs, Progress } from 'antd'\r\n\r\nimport { whWords, categories } from \"./shared\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst ProgressTab = (props) => {\r\n    const { values, numbers } = props\r\n    return (\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <div>\r\n                {whWords[0]}: ({`${numbers[0]}`})\r\n                <Progress percent={values[0]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n            </div>\r\n            <div>\r\n                {whWords[1]}: ({`${numbers[1]}`}) \r\n                <Progress percent={values[1]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[2]}: ({`${numbers[2]}`}) \r\n                <Progress percent={values[2]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[3]}: ({`${numbers[3]}`}) \r\n                <Progress percent={values[3]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[4]}: ({`${numbers[4]}`}) \r\n                <Progress percent={values[4]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nconst DataDistribution = (props) => {\r\n\r\n    const {dataset} = props\r\n    \r\n    const whNum = dataset.reduce((acc, cur, i) => {\r\n        if (!acc[cur.categoryId+1]) {\r\n            acc[cur.categoryId+1] = [0, 0, 0, 0, 0]\r\n        }\r\n        acc[cur.categoryId+1][cur.whId] = acc[cur.categoryId+1][cur.whId] + 1\r\n        return acc\r\n    }, {})\r\n\r\n    whNum[0] = Object.keys(whNum).reduce((acc, cur, i) => {\r\n        for (let index = 0; index < 5; index++) {\r\n            acc[index] = acc[index] + whNum[cur][index]\r\n        }\r\n        return acc\r\n    }, [0, 0, 0, 0, 0])\r\n    \r\n    const progressTab = Object.keys(whNum).map((key, i) => {\r\n        let values = whNum[key]\r\n        const sumV = values.reduce((p, c, i) => {\r\n            return p + c\r\n        }, 0)\r\n        values = values.map(v => v/sumV*100)\r\n        let name = \"No Name\"\r\n        if (key === '0') {\r\n            name = 'All'\r\n        } else {\r\n            name = categories[key-1]\r\n        }\r\n\r\n        name = `${name} (${sumV})`\r\n        \r\n        return (\r\n            <TabPane tab={<span>{name}</span>} key={i}>\r\n                <ProgressTab values={values} numbers={whNum[key]} />\r\n            </TabPane>\r\n        )\r\n    })\r\n    return (\r\n        <Tabs defaultActiveKey=\"0\">\r\n            {progressTab}\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default DataDistribution","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport { Tabs, Icon, Button } from 'antd'\r\nimport DataCreateForm from './DataCreateForm'\r\nimport DataTable from './DataTable'\r\nimport DataDistribution from './DataDistribution'\r\nimport { saveFile, jsonToCSV } from './shared'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const config = {\r\n      apiKey: \"AIzaSyAeaMv3Y2fp877wzX187ZjT5-7AwxZkU0Y\",\r\n      authDomain: \"datasetters.firebaseapp.com\",\r\n      databaseURL: \"https://datasetters.firebaseio.com\",\r\n      projectId: \"datasetters\",\r\n      storageBucket: \"datasetters.appspot.com\",\r\n      messagingSenderId: \"340269058452\"\r\n    }\r\n    firebase.initializeApp(config)\r\n    this.db = firebase.firestore()\r\n    this.state = {\r\n      dataset: [],\r\n      loading: true,\r\n      downloading: {\r\n        json: false,\r\n        csv: false\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.db.collection('dataset').onSnapshot((querySnapshot) => {\r\n      this.setState({ loading: true })\r\n      const dataset = []\r\n      querySnapshot.forEach((doc) => {\r\n        dataset.push({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        })\r\n      })\r\n      this.setState({ dataset, loading: false })\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  handleDownload(type) {\r\n    const { downloading, dataset } = this.state\r\n    const isDownloading = downloading[type]\r\n    if (isDownloading) return\r\n    downloading[type] = true\r\n    this.setState({downloading})\r\n    if (type === 'json') {\r\n\r\n      let data = JSON.stringify(dataset)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"json\"\r\n      const contentType = \"application/json;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    } else if (type === 'csv') {\r\n\r\n      let data = jsonToCSV(dataset, true)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"csv\"\r\n      const contentType = \"text/csv;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    }\r\n    downloading[type] = false\r\n    this.setState({downloading})\r\n  }\r\n\r\n  render() {\r\n    const { dataset, loading, downloading } = this.state\r\n    const dataSource = dataset.map((data, index) => ({\r\n      ...data,\r\n      key: index\r\n    }))\r\n    return (\r\n      <div className=\"App\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab={<span><Icon type=\"database\" />Data Table</span>} key=\"1\">\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <h1>\r\n              Dataset\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn json-btn\" onClick={(e) => this.handleDownload('json')} loading={downloading['json']}>JSON</Button>\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn csv-btn\" onClick={(e) => this.handleDownload('csv')} loading={downloading['csv']}>CSV</Button>\r\n            </h1>\r\n            <DataTable dataSource={dataSource} loading={loading} db={this.db} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"file-add\" />Add Data</span>} key=\"2\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Add Data</h1>\r\n            <DataCreateForm db={this.db} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"bar-chart\" />Data Distribution</span>} key=\"3\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Data Distribution</h1>\r\n            <DataDistribution dataset={dataset} />\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}