{"version":3,"sources":["shared.js","Spin.js","DataForm.js","DataTable.js","DataDistribution.js","App.js","serviceWorker.js","index.js"],"names":["categories","whWords","saveFile","data","contentType","fileName","arguments","length","undefined","ext","blob","Blob","decodeURIComponent","encodeURI","type","url","URL","createObjectURL","link","document","createElement","setAttribute","event","createEvent","initMouseEvent","window","dispatchEvent","Spin","react_default","a","spin","indicator","icon","style","fontSize","Option","Select","FormItem","Form","Item","TextArea","Input","DataForm","props","getFieldDecorator","form","db","mode","closeModal","setTempData","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","paragraphLoading","setParagraphLoading","_useState5","_useState6","questionLoading","setQuestionLoading","_useState7","_useState8","answerLoading","setAnswerLoading","_useState9","_useState10","articleIdLoading","setArticleIdLoading","onBlur","fieldName","_ref4","asyncToGenerator","regenerator_default","mark","_callee3","_ref3","value","_props$form","setFieldsValue","getFieldValue","res","tokens","wrap","_context3","prev","next","target","abrupt","split","join","axios","post","text","headers","Access-Control-Allow-Origin","sent","defineProperty","t0","console","error","finish","stop","this","_x5","apply","es_form","colon","label","src_Spin","rules","required","input","disabled","_ref6","_callee4","_ref5","_props$form2","id","_context4","title","_x6","onBlurTitle","initialValue","es_select","map","category","index","key","onInput","e","textarea","height","Math","min","scrollHeight","whWord","textAlign","es_button","onClick","validateFields","preventDefault","_ref","_callee","err","values","categoryId","whId","_context","findIndex","wh","objectSpread","collection","add","notification","message","_x","_x2","width","validateFieldsAndScroll","_ref2","_callee2","dataRef","_context2","omit","doc","update","_x3","_x4","defaultProps","create","mapPropsToFields","_ref7","createFormField","get","articleId","article","paragraph","paragraphTokens","question","questionTokens","answer","answerTokens","confirm","Modal","DataTable","dataSource","modalVisible","setModalVisible","setData","confirmDelete","onOk","_onOk","delete","onCancel","columns","dataIndex","filters","onFilter","record","indexOf","render","_","modal","destroyOnClose","centered","bodyStyle","maxHeight","overflowY","visible","footer","src_DataForm","table","pagination","pageSize","onRow","onDoubleClick","TabPane","Tabs","ProgressTab","numbers","padding","concat","progress","percent","status","format","toFixed","DataDistribution","whNum","dataset","reduce","acc","cur","i","keys","progressTab","sumV","p","c","v","name","tab","DataDistribution_ProgressTab","tabs","defaultActiveKey","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tempData","setState","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","state","downloading","json","csv","_this2","onSnapshot","querySnapshot","forEach","push","_this$state","JSON","stringify","log","header","fields","obj","field","splice","jsonToCSV","_this3","_this$state2","className","App_TabPane","shape","size","handleDownload","src_DataTable","src_DataDistribution","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0721b3fa.chunk.js","sourcesContent":["export const categories = [\r\n  'Science',\r\n  'History',\r\n  'Religion',\r\n  'Thailand',\r\n  'Art',\r\n  'Music',\r\n  'International',\r\n  'Technology',\r\n  'Health',\r\n  'Food',\r\n]\r\n\r\nexport const whWords = [\r\n  'Who',\r\n  'When',\r\n  'Where',\r\n  'What',\r\n  'How + Adj/Adv',\r\n]\r\n\r\nexport function saveFile(data, contentType, fileName=\"file\", ext=\"txt\") {\r\n  const blob = new Blob([decodeURIComponent(encodeURI(data))], { type: contentType })\r\n  const url = URL.createObjectURL( blob )\r\n  const link = document.createElement( 'a' )\r\n  link.setAttribute( 'href', url )\r\n  link.setAttribute( 'download', fileName + '.' + ext )\r\n  const event = document.createEvent( 'MouseEvents' )\r\n  event.initMouseEvent( 'click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n  link.dispatchEvent( event )\r\n}\r\n\r\nexport function jsonToCSV(json, header=false) {\r\n  let fields = Object.keys(json[0])\r\n  let csv = json.map(obj => {\r\n    return fields.map(field => {\r\n      return obj[field]\r\n    }).join(',')\r\n  })\r\n  if (header) csv.splice(0, 0, fields)\r\n  return csv.join('\\n')\r\n}","import React from 'react'\nimport { Spin as SpinAntd , Icon } from 'antd'\n\nconst Spin = () => <SpinAntd indicator={<Icon type=\"loading\" style={{ fontSize: 16 }} spin />} />\n\nexport default Spin","import React, { useState } from 'react'\r\nimport { Form, Select, Input, Button, notification } from 'antd'\r\nimport axios from 'axios'\r\nimport { get, omit } from 'lodash'\r\nimport { categories, whWords } from './shared'\r\nimport Spin from './Spin'\r\n\r\nconst { Option } = Select\r\nconst { Item: FormItem } = Form\r\nconst { TextArea } = Input\r\n\r\nconst DataForm = (props) => {\r\n  const {\r\n    form: { getFieldDecorator },\r\n    db,\r\n    mode,\r\n    closeModal,\r\n    setTempData,\r\n  } = props\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [paragraphLoading, setParagraphLoading] = useState(false)\r\n  const [questionLoading, setQuestionLoading] = useState(false)\r\n  const [answerLoading, setAnswerLoading] = useState(false)\r\n  const [articleIdLoading, setArticleIdLoading] = useState(false)\r\n\r\n  const handleCreate = (e) => {\r\n    const { form: { validateFields } } = props\r\n    e.preventDefault()\r\n    validateFields(async (err, values) => {\r\n      if (err) return\r\n      const categoryId = categories.findIndex((category) => category === values.category)\r\n      const whId = whWords.findIndex((whWord) => whWord === values.wh)\r\n      try {\r\n        setLoading(true)\r\n        const data = {\r\n          ...values,\r\n          categoryId,\r\n          whId,\r\n        }\r\n        await db.collection('dataset').add(data)\r\n        setTempData(data)\r\n        notification['success']({\r\n          message: 'Data added successfully.',\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n        notification['error']({\r\n          message: 'Something went wrong, please try again.',\r\n        });\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleEdit = (e) => {\r\n    const { form: { validateFieldsAndScroll } } = props\r\n    e.preventDefault()\r\n    validateFieldsAndScroll(async (err, values) => {\r\n      if (err) return\r\n      const categoryId = categories.findIndex((category) => category === values.category)\r\n      const whId = whWords.findIndex((whWord) => whWord === values.wh)\r\n      const { id } = values\r\n      const data = omit(values, 'id')\r\n      try {\r\n        setLoading(true)\r\n        const dataRef = db.collection('dataset').doc(id)\r\n        await dataRef.update({\r\n          ...data,\r\n          categoryId,\r\n          whId,\r\n        })\r\n        notification['success']({\r\n          message: 'Data edited successfully.',\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n        notification['error']({\r\n          message: 'Something went wrong, please try again.',\r\n        });\r\n      } finally {\r\n        setLoading(false)\r\n        closeModal()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onBlur = (fieldName, setLoading) => async ({ target: { value } }) => {\r\n    if (!value) return\r\n    try {\r\n      const { form: { setFieldsValue, getFieldValue } } = props\r\n      const prevValue = getFieldValue(fieldName) || ''\r\n      if (prevValue.split(',').join('') === value) return\r\n      setLoading(true)\r\n      const res = await axios.post(`https://py-thai-tokenizer.herokuapp.com/icu`, {\r\n        text: value\r\n      }, {\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      })\r\n      const { data: { tokens } } = res\r\n      setFieldsValue({ [fieldName]: tokens })\r\n    } catch (err) {\r\n      console.error(err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const onBlurTitle = (fieldName, setLoading) => async ({ target: { value } }) => {\r\n    if (!value) return\r\n    try {\r\n      const { form: { setFieldsValue, getFieldValue } } = props\r\n      const prevValue = getFieldValue(fieldName) || ''\r\n      if (prevValue.split(',').join('') === value) return\r\n      setLoading(true)\r\n      const res = await axios.post(`https://py-thai-tokenizer.herokuapp.com/wiki`, {\r\n        title: value\r\n      }, {\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      })\r\n      const { data: { id } } = res\r\n      setFieldsValue({ [fieldName]: id })\r\n    } catch (err) {\r\n      console.error(err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const resizeTextarea = e => {\r\n    const textarea = e.target\r\n    textarea.style.height = \"\"\r\n    textarea.style.height = Math.min(textarea.scrollHeight, 100) + \"px\"\r\n  }\r\n\r\n  getFieldDecorator('id')\r\n\r\n  return (\r\n    <Form>\r\n      <FormItem colon={false} label={<span>Article ID {articleIdLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('articleId', {\r\n          rules: [{ required: true }],\r\n        })(<Input disabled />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Article\">\r\n        {getFieldDecorator('article', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlurTitle('articleId', setArticleIdLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Category\">\r\n        {getFieldDecorator('category', {\r\n          initialValue: 'Science',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {categories.map((category, index) => <Option value={category} key={index}>{category}</Option>)}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Paragraph\">\r\n        {getFieldDecorator('paragraph', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea onInput={resizeTextarea} onBlur={onBlur('paragraphTokens', setParagraphLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Paragraph Tokens {paragraphLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('paragraphTokens', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"WH Word\">\r\n        {getFieldDecorator('wh', {\r\n          initialValue: 'Who',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {whWords.map((whWord, index) => (<Option value={whWord} key={index}>{whWord}</Option>))}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Question\">\r\n        {getFieldDecorator('question', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('questionTokens', setQuestionLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Question Tokens {questionLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('questionTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Answer\">\r\n        {getFieldDecorator('answer', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('answerTokens', setAnswerLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Answer Tokens {answerLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('answerTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      {mode === 'create' && <FormItem style={{ textAlign: 'center' }}>\r\n        <Button\r\n          onClick={handleCreate}\r\n          style={{ width: 100, height: 40 }}\r\n          type=\"primary\"\r\n          loading={loading}\r\n        >Add</Button>\r\n      </FormItem>}\r\n      {mode === 'edit' && <FormItem style={{ textAlign: 'center' }}>\r\n        <Button\r\n          onClick={handleEdit}\r\n          style={{ width: 100, height: 40 }}\r\n          type=\"primary\"\r\n          loading={loading}\r\n        >Edit</Button>\r\n      </FormItem>}\r\n    </Form>\r\n  )\r\n}\r\n\r\nDataForm.defaultProps = {\r\n  mode: 'create',\r\n  closeModal: () => {},\r\n}\r\n\r\nexport default Form.create({\r\n  mapPropsToFields: ({ data }) => ({\r\n    id: Form.createFormField({ value: get(data, 'id', '') }),\r\n    articleId: Form.createFormField({ value: get(data, 'articleId', '') }),\r\n    article: Form.createFormField({ value: get(data, 'article', '')}),\r\n    category: Form.createFormField({ value: get(data, 'category', 'Science')}),\r\n    paragraph: Form.createFormField({ value: get(data, 'paragraph', '')}),\r\n    paragraphTokens: Form.createFormField({ value: get(data, 'paragraphTokens', '')}),\r\n    wh: Form.createFormField({ value: get(data, 'wh', 'Who')}),\r\n    question: Form.createFormField({ value: get(data, 'question', '')}),\r\n    questionTokens: Form.createFormField({ value: get(data, 'questionTokens', '')}),\r\n    answer: Form.createFormField({ value: get(data, 'answer', '') }),\r\n    answerTokens: Form.createFormField({ value: get(data, 'answerTokens', '') }),\r\n  })\r\n})(DataForm)\r\n","import React, { useState } from 'react'\r\nimport { Table, Button, Modal, notification } from 'antd'\r\nimport { categories, whWords } from './shared'\r\nimport DataForm from './DataForm'\r\n\r\nconst confirm = Modal.confirm\r\n\r\nconst DataTable = ({ dataSource, loading, db }) => {\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [data, setData] = useState({})\r\n\r\n  const confirmDelete = (id) => () => {\r\n    confirm({\r\n      title: 'Do you want to delete these data?',\r\n      onOk: async () => {\r\n        try {\r\n          await db.collection(\"dataset\").doc(id).delete()\r\n          notification['success']({\r\n            message: 'Data deleted successfully.',\r\n          });\r\n        } catch (e) {\r\n          console.error(e)\r\n          notification['error']({\r\n            message: 'Something went wrong, please try again.',\r\n          });\r\n        }\r\n      },\r\n      onCancel: () => {},\r\n    })\r\n  }\r\n  \r\n  const columns = [{\r\n    title: 'Article ID',\r\n    dataIndex: 'articleId',\r\n    key: 'articleId',\r\n  }, {\r\n    title: 'Article',\r\n    dataIndex: 'article',\r\n    key: 'article',\r\n  }, {\r\n    title: 'Category',\r\n    dataIndex: 'category',\r\n    key: 'category',\r\n    filters: categories.map((category) => ({ text: category, value: category })),\r\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n  }, {\r\n    title: 'Paragraph',\r\n    dataIndex: 'paragraph',\r\n    key: 'paragraph',\r\n  }, {\r\n    title: 'WH Word',\r\n    dataIndex: 'wh',\r\n    key: 'wh',\r\n    filters: whWords.map((whWord) => ({ text: whWord, value: whWord })),\r\n    onFilter: (value, record) => record.wh.indexOf(value) === 0,\r\n  }, {\r\n    title: 'Question',\r\n    dataIndex: 'question',\r\n    key: 'question',\r\n  }, {\r\n    title: 'Answer',\r\n    dataIndex: 'answer',\r\n    key: 'answer',\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    render: (_, { id }) => <Button icon=\"delete\" type=\"danger\" onClick={confirmDelete(id)} />,\r\n  }];\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        destroyOnClose\r\n        centered\r\n        bodyStyle={{ maxHeight: 650, overflowY: 'scroll' }}\r\n        visible={modalVisible}\r\n        footer={null}\r\n        onCancel={() => { setModalVisible(false) }}\r\n      >\r\n        <DataForm db={db} mode=\"edit\" data={data} closeModal={() => { setModalVisible(false) }} />\r\n      </Modal>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={{ pageSize: 8 }}\r\n        loading={loading}\r\n        onRow={(record) => ({\r\n          onDoubleClick: () => {\r\n            setData(record)\r\n            setModalVisible(true)\r\n          }\r\n        })}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataTable\r\n","import React from 'react'\r\nimport { Tabs, Progress } from 'antd'\r\n\r\nimport { whWords, categories } from \"./shared\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst ProgressTab = (props) => {\r\n    const { values, numbers } = props\r\n    return (\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <div>\r\n                {whWords[0]}: ({`${numbers[0]}`})\r\n                <Progress percent={values[0]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n            </div>\r\n            <div>\r\n                {whWords[1]}: ({`${numbers[1]}`}) \r\n                <Progress percent={values[1]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[2]}: ({`${numbers[2]}`}) \r\n                <Progress percent={values[2]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[3]}: ({`${numbers[3]}`}) \r\n                <Progress percent={values[3]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[4]}: ({`${numbers[4]}`}) \r\n                <Progress percent={values[4]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nconst DataDistribution = (props) => {\r\n\r\n    const {dataset} = props\r\n    \r\n    const whNum = dataset.reduce((acc, cur, i) => {\r\n        if (!acc[cur.categoryId+1]) {\r\n            acc[cur.categoryId+1] = [0, 0, 0, 0, 0]\r\n        }\r\n        acc[cur.categoryId+1][cur.whId] = acc[cur.categoryId+1][cur.whId] + 1\r\n        return acc\r\n    }, {})\r\n\r\n    whNum[0] = Object.keys(whNum).reduce((acc, cur, i) => {\r\n        for (let index = 0; index < 5; index++) {\r\n            acc[index] = acc[index] + whNum[cur][index]\r\n        }\r\n        return acc\r\n    }, [0, 0, 0, 0, 0])\r\n    \r\n    const progressTab = Object.keys(whNum).map((key, i) => {\r\n        let values = whNum[key]\r\n        const sumV = values.reduce((p, c, i) => {\r\n            return p + c\r\n        }, 0)\r\n        values = values.map(v => v/sumV*100)\r\n        let name = \"No Name\"\r\n        if (key === '0') {\r\n            name = 'All'\r\n        } else {\r\n            name = categories[key-1]\r\n        }\r\n\r\n        name = `${name} (${sumV})`\r\n        \r\n        return (\r\n            <TabPane tab={<span>{name}</span>} key={i}>\r\n                <ProgressTab values={values} numbers={whNum[key]} />\r\n            </TabPane>\r\n        )\r\n    })\r\n    return (\r\n        <Tabs defaultActiveKey=\"0\">\r\n            {progressTab}\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default DataDistribution","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport { Tabs, Icon, Button } from 'antd'\r\nimport DataForm from './DataForm'\r\nimport DataTable from './DataTable'\r\nimport DataDistribution from './DataDistribution'\r\nimport { saveFile, jsonToCSV } from './shared'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const config = {\r\n      apiKey: \"AIzaSyAeaMv3Y2fp877wzX187ZjT5-7AwxZkU0Y\",\r\n      authDomain: \"datasetters.firebaseapp.com\",\r\n      databaseURL: \"https://datasetters.firebaseio.com\",\r\n      projectId: \"datasetters\",\r\n      storageBucket: \"datasetters.appspot.com\",\r\n      messagingSenderId: \"340269058452\"\r\n    }\r\n    firebase.initializeApp(config)\r\n    this.db = firebase.firestore()\r\n    this.state = {\r\n      dataset: [],\r\n      loading: true,\r\n      downloading: {\r\n        json: false,\r\n        csv: false\r\n      },\r\n      tempData: {},\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.db.collection('dataset').onSnapshot((querySnapshot) => {\r\n      this.setState({ loading: true })\r\n      const dataset = []\r\n      querySnapshot.forEach((doc) => {\r\n        dataset.push({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        })\r\n      })\r\n      this.setState({ dataset, loading: false })\r\n    })\r\n  }\r\n\r\n  setTempData = (tempData) => { this.setState({ tempData }) }\r\n\r\n  handleDownload(type) {\r\n    const { downloading, dataset } = this.state\r\n    const isDownloading = downloading[type]\r\n    if (isDownloading) return\r\n    downloading[type] = true\r\n    this.setState({downloading})\r\n    if (type === 'json') {\r\n\r\n      let data = JSON.stringify(dataset)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"json\"\r\n      const contentType = \"application/json;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    } else if (type === 'csv') {\r\n\r\n      let data = jsonToCSV(dataset, true)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"csv\"\r\n      const contentType = \"text/csv;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    }\r\n    downloading[type] = false\r\n    this.setState({downloading})\r\n  }\r\n\r\n  render() {\r\n    const { dataset, loading, downloading, tempData } = this.state\r\n    const dataSource = dataset.map((data, index) => ({\r\n      ...data,\r\n      key: index\r\n    }))\r\n    return (\r\n      <div className=\"App\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab={<span><Icon type=\"database\" />Data Table</span>} key=\"1\">\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <h1>\r\n              Dataset\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn json-btn\" onClick={(e) => this.handleDownload('json')} loading={downloading['json']}>JSON</Button>\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn csv-btn\" onClick={(e) => this.handleDownload('csv')} loading={downloading['csv']}>CSV</Button>\r\n            </h1>\r\n            <DataTable dataSource={dataSource} loading={loading} db={this.db} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"file-add\" />Add Data</span>} key=\"2\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Add Data</h1>\r\n            <DataForm db={this.db} data={tempData} setTempData={this.setTempData} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"bar-chart\" />Data Distribution</span>} key=\"3\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Data Distribution</h1>\r\n            <DataDistribution dataset={dataset} />\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}