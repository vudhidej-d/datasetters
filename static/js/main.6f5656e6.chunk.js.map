{"version":3,"sources":["shared.js","Spin.js","DataForm.js","DataTable.js","DataDistribution.js","App.js","serviceWorker.js","index.js"],"names":["categories","whWords","saveFile","data","contentType","fileName","arguments","length","undefined","ext","blob","Blob","decodeURIComponent","encodeURI","type","url","URL","createObjectURL","link","document","createElement","setAttribute","event","createEvent","initMouseEvent","window","dispatchEvent","Spin","react_default","a","spin","indicator","icon","style","fontSize","Option","Select","FormItem","Form","Item","TextArea","Input","DataForm","props","getFieldDecorator","form","db","mode","closeModal","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","paragraphLoading","setParagraphLoading","_useState5","_useState6","questionLoading","setQuestionLoading","_useState7","_useState8","answerLoading","setAnswerLoading","onBlur","fieldName","_ref4","asyncToGenerator","regenerator_default","mark","_callee3","_ref3","value","_props$form","setFieldsValue","getFieldValue","res","tokens","wrap","_context3","prev","next","target","abrupt","split","join","axios","get","concat","headers","Access-Control-Allow-Origin","sent","defineProperty","t0","console","error","finish","stop","_x5","apply","this","es_form","colon","label","rules","required","input","initialValue","es_select","map","category","index","key","onInput","e","textarea","height","Math","min","scrollHeight","src_Spin","disabled","whWord","textAlign","es_button","onClick","validateFieldsAndScroll","preventDefault","_ref","_callee","err","values","categoryId","whId","_context","findIndex","wh","collection","add","objectSpread","notification","message","_x","_x2","width","_ref2","_callee2","id","dataRef","_context2","omit","doc","update","_x3","_x4","defaultProps","create","mapPropsToFields","_ref5","createFormField","articleId","article","paragraph","paragraphTokens","question","questionTokens","answer","answerTokens","confirm","Modal","DataTable","dataSource","modalVisible","setModalVisible","setData","confirmDelete","title","onOk","_onOk","delete","onCancel","columns","dataIndex","filters","text","onFilter","record","indexOf","render","_","modal","destroyOnClose","centered","bodyStyle","maxHeight","overflowY","visible","footer","src_DataForm","table","pagination","pageSize","onRow","onDoubleClick","TabPane","Tabs","ProgressTab","numbers","padding","progress","percent","status","format","toFixed","DataDistribution","whNum","dataset","reduce","acc","cur","i","keys","progressTab","sumV","p","c","v","name","tab","DataDistribution_ProgressTab","tabs","defaultActiveKey","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","state","downloading","json","csv","_this2","onSnapshot","querySnapshot","setState","forEach","push","_this$state","JSON","stringify","log","header","fields","obj","field","splice","jsonToCSV","_this3","_this$state2","className","App_TabPane","shape","size","handleDownload","src_DataTable","src_DataDistribution","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f5656e6.chunk.js","sourcesContent":["export const categories = [\r\n  'Science',\r\n  'History',\r\n  'Religion',\r\n  'Thailand',\r\n  'Art',\r\n  'Music',\r\n  'International',\r\n  'Technology',\r\n  'Health',\r\n  'Food',\r\n]\r\n\r\nexport const whWords = [\r\n  'Who',\r\n  'When',\r\n  'Where',\r\n  'What',\r\n  'How + Adj/Adv',\r\n]\r\n\r\nexport function saveFile(data, contentType, fileName=\"file\", ext=\"txt\") {\r\n  const blob = new Blob([decodeURIComponent(encodeURI(data))], { type: contentType })\r\n  const url = URL.createObjectURL( blob )\r\n  const link = document.createElement( 'a' )\r\n  link.setAttribute( 'href', url )\r\n  link.setAttribute( 'download', fileName + '.' + ext )\r\n  const event = document.createEvent( 'MouseEvents' )\r\n  event.initMouseEvent( 'click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n  link.dispatchEvent( event )\r\n}\r\n\r\nexport function jsonToCSV(json, header=false) {\r\n  let fields = Object.keys(json[0])\r\n  let csv = json.map(obj => {\r\n    return fields.map(field => {\r\n      return obj[field]\r\n    }).join(',')\r\n  })\r\n  if (header) csv.splice(0, 0, fields)\r\n  return csv.join('\\n')\r\n}","import React from 'react'\r\nimport { Spin as SpinAntd , Icon } from 'antd'\r\n\r\nconst Spin = () => <SpinAntd indicator={<Icon type=\"loading\" style={{ fontSize: 16 }} spin />} />\r\n\r\nexport default Spin","import React, { useState } from 'react'\r\nimport { Form, Select, Input, Button, notification } from 'antd'\r\nimport axios from 'axios'\r\nimport { get, omit } from 'lodash'\r\nimport { categories, whWords } from './shared'\r\nimport Spin from './Spin'\r\n\r\nconst { Option } = Select\r\nconst { Item: FormItem } = Form\r\nconst { TextArea } = Input\r\n\r\nconst DataForm = (props) => {\r\n  const {\r\n    form: { getFieldDecorator },\r\n    db,\r\n    mode,\r\n    closeModal,\r\n  } = props\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [paragraphLoading, setParagraphLoading] = useState(false)\r\n  const [questionLoading, setQuestionLoading] = useState(false)\r\n  const [answerLoading, setAnswerLoading] = useState(false)\r\n\r\n  const handleCreate = (e) => {\r\n    const { form: { validateFieldsAndScroll } } = props\r\n    e.preventDefault()\r\n    validateFieldsAndScroll(async (err, values) => {\r\n      if (err) return\r\n      const categoryId = categories.findIndex((category) => category === values.category)\r\n      const whId = whWords.findIndex((whWord) => whWord === values.wh)\r\n      try {\r\n        setLoading(true)\r\n        await db.collection('dataset').add({\r\n          ...values,\r\n          categoryId,\r\n          whId,\r\n        })\r\n        notification['success']({\r\n          message: 'Data added successfully.',\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n        notification['error']({\r\n          message: 'Something went wrong, please try again.',\r\n        });\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleEdit = (e) => {\r\n    const { form: { validateFieldsAndScroll } } = props\r\n    e.preventDefault()\r\n    validateFieldsAndScroll(async (err, values) => {\r\n      if (err) return\r\n      const categoryId = categories.findIndex((category) => category === values.category)\r\n      const whId = whWords.findIndex((whWord) => whWord === values.wh)\r\n      const { id } = values\r\n      const data = omit(values, 'id')\r\n      try {\r\n        setLoading(true)\r\n        const dataRef = db.collection('dataset').doc(id)\r\n        await dataRef.update({\r\n          ...data,\r\n          categoryId,\r\n          whId,\r\n        })\r\n        notification['success']({\r\n          message: 'Data edited successfully.',\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n        notification['error']({\r\n          message: 'Something went wrong, please try again.',\r\n        });\r\n      } finally {\r\n        setLoading(false)\r\n        closeModal()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onBlur = (fieldName, setLoading) => async ({ target: { value } }) => {\r\n    if (!value) return\r\n    try {\r\n      const { form: { setFieldsValue, getFieldValue } } = props\r\n      const prevValue = getFieldValue(fieldName) || ''\r\n      if (prevValue.split(',').join('') === value) return\r\n      setLoading(true)\r\n      const res = await axios.get(`https://py-thai-tokenizer.herokuapp.com/icu/${value}`, {\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      })\r\n      const { data: { tokens } } = res\r\n      setFieldsValue({ [fieldName]: tokens })\r\n    } catch (err) {\r\n      console.error(err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const resizeTextarea = e => {\r\n    const textarea = e.target\r\n    textarea.style.height = \"\"\r\n    textarea.style.height = Math.min(textarea.scrollHeight, 100) + \"px\"\r\n  }\r\n\r\n  getFieldDecorator('id')\r\n\r\n  return (\r\n    <Form>\r\n      <FormItem colon={false} label=\"Article ID\">\r\n        {getFieldDecorator('articleId', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Article\">\r\n        {getFieldDecorator('article', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Category\">\r\n        {getFieldDecorator('category', {\r\n          initialValue: 'Science',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {categories.map((category, index) => <Option value={category} key={index}>{category}</Option>)}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Paragraph\">\r\n        {getFieldDecorator('paragraph', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea onInput={resizeTextarea} onBlur={onBlur('paragraphTokens', setParagraphLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Paragraph Tokens {paragraphLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('paragraphTokens', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea disabled />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"WH Word\">\r\n        {getFieldDecorator('wh', {\r\n          initialValue: 'Who',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {whWords.map((whWord, index) => (<Option value={whWord} key={index}>{whWord}</Option>))}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Question\">\r\n        {getFieldDecorator('question', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('questionTokens', setQuestionLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Question Tokens {questionLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('questionTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input disabled />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Answer\">\r\n        {getFieldDecorator('answer', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('answerTokens', setAnswerLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Answer Tokens {answerLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('answerTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input disabled />)}\r\n      </FormItem>\r\n      {mode === 'create' && <FormItem style={{ textAlign: 'center' }}>\r\n        <Button\r\n          onClick={handleCreate}\r\n          style={{ width: 100, height: 40 }}\r\n          type=\"primary\"\r\n          loading={loading}\r\n        >Add</Button>\r\n      </FormItem>}\r\n      {mode === 'edit' && <FormItem style={{ textAlign: 'center' }}>\r\n        <Button\r\n          onClick={handleEdit}\r\n          style={{ width: 100, height: 40 }}\r\n          type=\"primary\"\r\n          loading={loading}\r\n        >Edit</Button>\r\n      </FormItem>}\r\n    </Form>\r\n  )\r\n}\r\n\r\nDataForm.defaultProps = {\r\n  mode: 'create',\r\n  closeModal: () => {},\r\n}\r\n\r\nexport default Form.create({\r\n  mapPropsToFields: ({ data }) => ({\r\n    id: Form.createFormField({ value: get(data, 'id', '') }),\r\n    articleId: Form.createFormField({ value: get(data, 'articleId', '') }),\r\n    article: Form.createFormField({ value: get(data, 'article', '')}),\r\n    category: Form.createFormField({ value: get(data, 'category', 'Science')}),\r\n    paragraph: Form.createFormField({ value: get(data, 'paragraph', '')}),\r\n    paragraphTokens: Form.createFormField({ value: get(data, 'paragraphTokens', '')}),\r\n    wh: Form.createFormField({ value: get(data, 'wh', 'Who')}),\r\n    question: Form.createFormField({ value: get(data, 'question', '')}),\r\n    questionTokens: Form.createFormField({ value: get(data, 'questionTokens', '')}),\r\n    answer: Form.createFormField({ value: get(data, 'answer', '') }),\r\n    answerTokens: Form.createFormField({ value: get(data, 'answerTokens', '') }),\r\n  })\r\n})(DataForm)\r\n","import React, { useState } from 'react'\r\nimport { Table, Button, Modal, notification } from 'antd'\r\nimport { categories, whWords } from './shared'\r\nimport DataForm from './DataForm'\r\n\r\nconst confirm = Modal.confirm\r\n\r\nconst DataTable = ({ dataSource, loading, db }) => {\r\n  const [modalVisible, setModalVisible] = useState(false)\r\n  const [data, setData] = useState({})\r\n\r\n  const confirmDelete = (id) => () => {\r\n    confirm({\r\n      title: 'Do you want to delete these data?',\r\n      onOk: async () => {\r\n        try {\r\n          await db.collection(\"dataset\").doc(id).delete()\r\n          notification['success']({\r\n            message: 'Data deleted successfully.',\r\n          });\r\n        } catch (e) {\r\n          console.error(e)\r\n          notification['error']({\r\n            message: 'Something went wrong, please try again.',\r\n          });\r\n        }\r\n      },\r\n      onCancel: () => {},\r\n    })\r\n  }\r\n  \r\n  const columns = [{\r\n    title: 'Article ID',\r\n    dataIndex: 'articleId',\r\n    key: 'articleId',\r\n  }, {\r\n    title: 'Article',\r\n    dataIndex: 'article',\r\n    key: 'article',\r\n  }, {\r\n    title: 'Category',\r\n    dataIndex: 'category',\r\n    key: 'category',\r\n    filters: categories.map((category) => ({ text: category, value: category })),\r\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n  }, {\r\n    title: 'Paragraph',\r\n    dataIndex: 'paragraph',\r\n    key: 'paragraph',\r\n  }, {\r\n    title: 'WH Word',\r\n    dataIndex: 'wh',\r\n    key: 'wh',\r\n    filters: whWords.map((whWord) => ({ text: whWord, value: whWord })),\r\n    onFilter: (value, record) => record.wh.indexOf(value) === 0,\r\n  }, {\r\n    title: 'Question',\r\n    dataIndex: 'question',\r\n    key: 'question',\r\n  }, {\r\n    title: 'Answer',\r\n    dataIndex: 'answer',\r\n    key: 'answer',\r\n  },\r\n  {\r\n    title: 'Action',\r\n    key: 'action',\r\n    render: (_, { id }) => <Button icon=\"delete\" type=\"danger\" onClick={confirmDelete(id)} />,\r\n  }];\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        destroyOnClose\r\n        centered\r\n        bodyStyle={{ maxHeight: 650, overflowY: 'scroll' }}\r\n        visible={modalVisible}\r\n        footer={null}\r\n        onCancel={() => { setModalVisible(false) }}\r\n      >\r\n        <DataForm db={db} mode=\"edit\" data={data} closeModal={() => { setModalVisible(false) }} />\r\n      </Modal>\r\n      <Table\r\n        dataSource={dataSource}\r\n        columns={columns}\r\n        pagination={{ pageSize: 8 }}\r\n        loading={loading}\r\n        onRow={(record) => ({\r\n          onDoubleClick: () => {\r\n            setData(record)\r\n            setModalVisible(true)\r\n          }\r\n        })}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DataTable\r\n","import React from 'react'\r\nimport { Tabs, Progress } from 'antd'\r\n\r\nimport { whWords, categories } from \"./shared\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst ProgressTab = (props) => {\r\n    const { values, numbers } = props\r\n    return (\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <div>\r\n                {whWords[0]}: ({`${numbers[0]}`})\r\n                <Progress percent={values[0]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n            </div>\r\n            <div>\r\n                {whWords[1]}: ({`${numbers[1]}`}) \r\n                <Progress percent={values[1]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[2]}: ({`${numbers[2]}`}) \r\n                <Progress percent={values[2]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[3]}: ({`${numbers[3]}`}) \r\n                <Progress percent={values[3]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[4]}: ({`${numbers[4]}`}) \r\n                <Progress percent={values[4]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nconst DataDistribution = (props) => {\r\n\r\n    const {dataset} = props\r\n    \r\n    const whNum = dataset.reduce((acc, cur, i) => {\r\n        if (!acc[cur.categoryId+1]) {\r\n            acc[cur.categoryId+1] = [0, 0, 0, 0, 0]\r\n        }\r\n        acc[cur.categoryId+1][cur.whId] = acc[cur.categoryId+1][cur.whId] + 1\r\n        return acc\r\n    }, {})\r\n\r\n    whNum[0] = Object.keys(whNum).reduce((acc, cur, i) => {\r\n        for (let index = 0; index < 5; index++) {\r\n            acc[index] = acc[index] + whNum[cur][index]\r\n        }\r\n        return acc\r\n    }, [0, 0, 0, 0, 0])\r\n    \r\n    const progressTab = Object.keys(whNum).map((key, i) => {\r\n        let values = whNum[key]\r\n        const sumV = values.reduce((p, c, i) => {\r\n            return p + c\r\n        }, 0)\r\n        values = values.map(v => v/sumV*100)\r\n        let name = \"No Name\"\r\n        if (key === '0') {\r\n            name = 'All'\r\n        } else {\r\n            name = categories[key-1]\r\n        }\r\n\r\n        name = `${name} (${sumV})`\r\n        \r\n        return (\r\n            <TabPane tab={<span>{name}</span>} key={i}>\r\n                <ProgressTab values={values} numbers={whNum[key]} />\r\n            </TabPane>\r\n        )\r\n    })\r\n    return (\r\n        <Tabs defaultActiveKey=\"0\">\r\n            {progressTab}\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default DataDistribution","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport { Tabs, Icon, Button } from 'antd'\r\nimport DataForm from './DataForm'\r\nimport DataTable from './DataTable'\r\nimport DataDistribution from './DataDistribution'\r\nimport { saveFile, jsonToCSV } from './shared'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const config = {\r\n      apiKey: \"AIzaSyAeaMv3Y2fp877wzX187ZjT5-7AwxZkU0Y\",\r\n      authDomain: \"datasetters.firebaseapp.com\",\r\n      databaseURL: \"https://datasetters.firebaseio.com\",\r\n      projectId: \"datasetters\",\r\n      storageBucket: \"datasetters.appspot.com\",\r\n      messagingSenderId: \"340269058452\"\r\n    }\r\n    firebase.initializeApp(config)\r\n    this.db = firebase.firestore()\r\n    this.state = {\r\n      dataset: [],\r\n      loading: true,\r\n      downloading: {\r\n        json: false,\r\n        csv: false\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.db.collection('dataset').onSnapshot((querySnapshot) => {\r\n      this.setState({ loading: true })\r\n      const dataset = []\r\n      querySnapshot.forEach((doc) => {\r\n        dataset.push({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        })\r\n      })\r\n      this.setState({ dataset, loading: false })\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  handleDownload(type) {\r\n    const { downloading, dataset } = this.state\r\n    const isDownloading = downloading[type]\r\n    if (isDownloading) return\r\n    downloading[type] = true\r\n    this.setState({downloading})\r\n    if (type === 'json') {\r\n\r\n      let data = JSON.stringify(dataset)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"json\"\r\n      const contentType = \"application/json;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    } else if (type === 'csv') {\r\n\r\n      let data = jsonToCSV(dataset, true)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"csv\"\r\n      const contentType = \"text/csv;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    }\r\n    downloading[type] = false\r\n    this.setState({downloading})\r\n  }\r\n\r\n  render() {\r\n    const { dataset, loading, downloading } = this.state\r\n    const dataSource = dataset.map((data, index) => ({\r\n      ...data,\r\n      key: index\r\n    }))\r\n    return (\r\n      <div className=\"App\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab={<span><Icon type=\"database\" />Data Table</span>} key=\"1\">\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <h1>\r\n              Dataset\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn json-btn\" onClick={(e) => this.handleDownload('json')} loading={downloading['json']}>JSON</Button>\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn csv-btn\" onClick={(e) => this.handleDownload('csv')} loading={downloading['csv']}>CSV</Button>\r\n            </h1>\r\n            <DataTable dataSource={dataSource} loading={loading} db={this.db} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"file-add\" />Add Data</span>} key=\"2\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Add Data</h1>\r\n            <DataForm db={this.db} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"bar-chart\" />Data Distribution</span>} key=\"3\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Data Distribution</h1>\r\n            <DataDistribution dataset={dataset} />\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}