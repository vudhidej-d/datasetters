{"version":3,"sources":["shared.js","Spin.js","DataForm.js","DataTable.js","DataDistribution.js","App.js","serviceWorker.js","index.js"],"names":["categories","whWords","saveFile","data","contentType","fileName","arguments","length","undefined","ext","blob","Blob","decodeURIComponent","encodeURI","type","url","URL","createObjectURL","link","document","createElement","setAttribute","event","createEvent","initMouseEvent","window","dispatchEvent","Spin","react_default","a","spin","indicator","icon","style","fontSize","Option","Select","FormItem","Form","Item","TextArea","Input","DataForm","props","getFieldDecorator","form","db","mode","closeModal","_useState","useState","_useState2","Object","slicedToArray","loading","setLoading","_useState3","_useState4","paragraphLoading","setParagraphLoading","_useState5","_useState6","questionLoading","setQuestionLoading","_useState7","_useState8","answerLoading","setAnswerLoading","onBlur","fieldName","_ref4","asyncToGenerator","regenerator_default","mark","_callee3","_ref3","value","_props$form","setFieldsValue","getFieldValue","res","tokens","wrap","_context3","prev","next","target","abrupt","split","join","axios","post","text","headers","Access-Control-Allow-Origin","sent","defineProperty","t0","console","error","finish","stop","this","_x5","apply","es_form","colon","label","rules","required","input","initialValue","es_select","map","category","index","key","onInput","e","textarea","height","Math","min","scrollHeight","src_Spin","disabled","whWord","textAlign","es_button","onClick","validateFields","preventDefault","_ref","_callee","err","values","categoryId","whId","_context","findIndex","wh","collection","add","objectSpread","notification","message","_x","_x2","width","validateFieldsAndScroll","_ref2","_callee2","id","dataRef","_context2","omit","doc","update","_x3","_x4","defaultProps","create","mapPropsToFields","_ref5","createFormField","get","articleId","article","paragraph","paragraphTokens","question","questionTokens","answer","answerTokens","confirm","Modal","DataTable","dataSource","modalVisible","setModalVisible","setData","confirmDelete","title","onOk","_onOk","delete","onCancel","columns","dataIndex","filters","onFilter","record","indexOf","render","_","modal","destroyOnClose","centered","bodyStyle","maxHeight","overflowY","visible","footer","src_DataForm","table","pagination","pageSize","onRow","onDoubleClick","TabPane","Tabs","ProgressTab","numbers","padding","concat","progress","percent","status","format","toFixed","DataDistribution","whNum","dataset","reduce","acc","cur","i","keys","progressTab","sumV","p","c","v","name","tab","DataDistribution_ProgressTab","tabs","defaultActiveKey","App","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","state","downloading","json","csv","_this2","onSnapshot","querySnapshot","setState","forEach","push","_this$state","JSON","stringify","log","header","fields","obj","field","splice","jsonToCSV","_this3","_this$state2","className","App_TabPane","shape","size","handleDownload","src_DataTable","src_DataDistribution","Component","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13263017.chunk.js","sourcesContent":["export const categories = [\r\n  'Science',\r\n  'History',\r\n  'Religion',\r\n  'Thailand',\r\n  'Art',\r\n  'Music',\r\n  'International',\r\n  'Technology',\r\n  'Health',\r\n  'Food',\r\n]\r\n\r\nexport const whWords = [\r\n  'Who',\r\n  'When',\r\n  'Where',\r\n  'What',\r\n  'How + Adj/Adv',\r\n]\r\n\r\nexport function saveFile(data, contentType, fileName=\"file\", ext=\"txt\") {\r\n  const blob = new Blob([decodeURIComponent(encodeURI(data))], { type: contentType })\r\n  const url = URL.createObjectURL( blob )\r\n  const link = document.createElement( 'a' )\r\n  link.setAttribute( 'href', url )\r\n  link.setAttribute( 'download', fileName + '.' + ext )\r\n  const event = document.createEvent( 'MouseEvents' )\r\n  event.initMouseEvent( 'click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null)\r\n  link.dispatchEvent( event )\r\n}\r\n\r\nexport function jsonToCSV(json, header=false) {\r\n  let fields = Object.keys(json[0])\r\n  let csv = json.map(obj => {\r\n    return fields.map(field => {\r\n      return obj[field]\r\n    }).join(',')\r\n  })\r\n  if (header) csv.splice(0, 0, fields)\r\n  return csv.join('\\n')\r\n}","import React from 'react'\nimport { Spin as SpinAntd , Icon } from 'antd'\n\nconst Spin = () => <SpinAntd indicator={<Icon type=\"loading\" style={{ fontSize: 16 }} spin />} />\n\nexport default Spin","import React, { useState } from 'react'\r\nimport { Form, Select, Input, Button, notification } from 'antd'\r\nimport axios from 'axios'\r\nimport { get, omit } from 'lodash'\r\nimport { categories, whWords } from './shared'\r\nimport Spin from './Spin'\r\n\r\nconst { Option } = Select\r\nconst { Item: FormItem } = Form\r\nconst { TextArea } = Input\r\n\r\nconst DataForm = (props) => {\r\n  const {\r\n    form: { getFieldDecorator },\r\n    db,\r\n    mode,\r\n    closeModal,\r\n  } = props\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [paragraphLoading, setParagraphLoading] = useState(false)\r\n  const [questionLoading, setQuestionLoading] = useState(false)\r\n  const [answerLoading, setAnswerLoading] = useState(false)\r\n\r\n  const handleCreate = (e) => {\r\n    const { form: { validateFields } } = props\r\n    e.preventDefault()\r\n    validateFields(async (err, values) => {\r\n      if (err) return\r\n      const categoryId = categories.findIndex((category) => category === values.category)\r\n      const whId = whWords.findIndex((whWord) => whWord === values.wh)\r\n      try {\r\n        setLoading(true)\r\n        await db.collection('dataset').add({\r\n          ...values,\r\n          categoryId,\r\n          whId,\r\n        })\r\n        notification['success']({\r\n          message: 'Data added successfully.',\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n        notification['error']({\r\n          message: 'Something went wrong, please try again.',\r\n        });\r\n      } finally {\r\n        setLoading(false)\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleEdit = (e) => {\r\n    const { form: { validateFieldsAndScroll } } = props\r\n    e.preventDefault()\r\n    validateFieldsAndScroll(async (err, values) => {\r\n      if (err) return\r\n      const categoryId = categories.findIndex((category) => category === values.category)\r\n      const whId = whWords.findIndex((whWord) => whWord === values.wh)\r\n      const { id } = values\r\n      const data = omit(values, 'id')\r\n      try {\r\n        setLoading(true)\r\n        const dataRef = db.collection('dataset').doc(id)\r\n        await dataRef.update({\r\n          ...data,\r\n          categoryId,\r\n          whId,\r\n        })\r\n        notification['success']({\r\n          message: 'Data edited successfully.',\r\n        });\r\n      } catch (e) {\r\n        console.error(e)\r\n        notification['error']({\r\n          message: 'Something went wrong, please try again.',\r\n        });\r\n      } finally {\r\n        setLoading(false)\r\n        closeModal()\r\n      }\r\n    })\r\n  }\r\n\r\n  const onBlur = (fieldName, setLoading) => async ({ target: { value } }) => {\r\n    if (!value) return\r\n    try {\r\n      const { form: { setFieldsValue, getFieldValue } } = props\r\n      const prevValue = getFieldValue(fieldName) || ''\r\n      if (prevValue.split(',').join('') === value) return\r\n      setLoading(true)\r\n      const res = await axios.post(`https://py-thai-tokenizer.herokuapp.com/icu`, {\r\n        text: value\r\n      }, {\r\n        headers: {\r\n          'Access-Control-Allow-Origin': '*',\r\n        },\r\n      })\r\n      const { data: { tokens } } = res\r\n      setFieldsValue({ [fieldName]: tokens })\r\n    } catch (err) {\r\n      console.error(err)\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  const resizeTextarea = e => {\r\n    const textarea = e.target\r\n    textarea.style.height = \"\"\r\n    textarea.style.height = Math.min(textarea.scrollHeight, 100) + \"px\"\r\n  }\r\n\r\n  getFieldDecorator('id')\r\n\r\n  return (\r\n    <Form>\r\n      <FormItem colon={false} label=\"Article ID\">\r\n        {getFieldDecorator('articleId', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Article\">\r\n        {getFieldDecorator('article', {\r\n          rules: [{ required: true }],\r\n        })(<Input />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Category\">\r\n        {getFieldDecorator('category', {\r\n          initialValue: 'Science',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {categories.map((category, index) => <Option value={category} key={index}>{category}</Option>)}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Paragraph\">\r\n        {getFieldDecorator('paragraph', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea onInput={resizeTextarea} onBlur={onBlur('paragraphTokens', setParagraphLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Paragraph Tokens {paragraphLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('paragraphTokens', {\r\n          rules: [{ required: true }],\r\n        })(<TextArea disabled />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"WH Word\">\r\n        {getFieldDecorator('wh', {\r\n          initialValue: 'Who',\r\n          rules: [{ required: true }],\r\n        })(<Select>\r\n          {whWords.map((whWord, index) => (<Option value={whWord} key={index}>{whWord}</Option>))}\r\n        </Select>)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Question\">\r\n        {getFieldDecorator('question', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('questionTokens', setQuestionLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Question Tokens {questionLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('questionTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input disabled />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label=\"Answer\">\r\n        {getFieldDecorator('answer', {\r\n          rules: [{ required: true }],\r\n        })(<Input onBlur={onBlur('answerTokens', setAnswerLoading)} />)}\r\n      </FormItem>\r\n      <FormItem colon={false} label={<span>Answer Tokens {answerLoading && <Spin />}</span>}>\r\n        {getFieldDecorator('answerTokens', {\r\n          rules: [{ required: true }],\r\n        })(<Input disabled />)}\r\n      </FormItem>\r\n      {mode === 'create' && <FormItem style={{ textAlign: 'center' }}>\r\n        <Button\r\n          onClick={handleCreate}\r\n          style={{ width: 100, height: 40 }}\r\n          type=\"primary\"\r\n          loading={loading}\r\n        >Add</Button>\r\n      </FormItem>}\r\n      {mode === 'edit' && <FormItem style={{ textAlign: 'center' }}>\r\n        <Button\r\n          onClick={handleEdit}\r\n          style={{ width: 100, height: 40 }}\r\n          type=\"primary\"\r\n          loading={loading}\r\n        >Edit</Button>\r\n      </FormItem>}\r\n    </Form>\r\n  )\r\n}\r\n\r\nDataForm.defaultProps = {\r\n  mode: 'create',\r\n  closeModal: () => {},\r\n}\r\n\r\nexport default Form.create({\r\n  mapPropsToFields: ({ data }) => ({\r\n    id: Form.createFormField({ value: get(data, 'id', '') }),\r\n    articleId: Form.createFormField({ value: get(data, 'articleId', '') }),\r\n    article: Form.createFormField({ value: get(data, 'article', '')}),\r\n    category: Form.createFormField({ value: get(data, 'category', 'Science')}),\r\n    paragraph: Form.createFormField({ value: get(data, 'paragraph', '')}),\r\n    paragraphTokens: Form.createFormField({ value: get(data, 'paragraphTokens', '')}),\r\n    wh: Form.createFormField({ value: get(data, 'wh', 'Who')}),\r\n    question: Form.createFormField({ value: get(data, 'question', '')}),\r\n    questionTokens: Form.createFormField({ value: get(data, 'questionTokens', '')}),\r\n    answer: Form.createFormField({ value: get(data, 'answer', '') }),\r\n    answerTokens: Form.createFormField({ value: get(data, 'answerTokens', '') }),\r\n  })\r\n})(DataForm)\r\n","import React, { useState } from 'react'\nimport { Table, Button, Modal, notification } from 'antd'\nimport { categories, whWords } from './shared'\nimport DataForm from './DataForm'\n\nconst confirm = Modal.confirm\n\nconst DataTable = ({ dataSource, loading, db }) => {\n  const [modalVisible, setModalVisible] = useState(false)\n  const [data, setData] = useState({})\n\n  const confirmDelete = (id) => () => {\n    confirm({\n      title: 'Do you want to delete these data?',\n      onOk: async () => {\n        try {\n          await db.collection(\"dataset\").doc(id).delete()\n          notification['success']({\n            message: 'Data deleted successfully.',\n          });\n        } catch (e) {\n          console.error(e)\n          notification['error']({\n            message: 'Something went wrong, please try again.',\n          });\n        }\n      },\n      onCancel: () => {},\n    })\n  }\n  \n  const columns = [{\n    title: 'Article ID',\n    dataIndex: 'articleId',\n    key: 'articleId',\n  }, {\n    title: 'Article',\n    dataIndex: 'article',\n    key: 'article',\n  }, {\n    title: 'Category',\n    dataIndex: 'category',\n    key: 'category',\n    filters: categories.map((category) => ({ text: category, value: category })),\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\n  }, {\n    title: 'Paragraph',\n    dataIndex: 'paragraph',\n    key: 'paragraph',\n  }, {\n    title: 'WH Word',\n    dataIndex: 'wh',\n    key: 'wh',\n    filters: whWords.map((whWord) => ({ text: whWord, value: whWord })),\n    onFilter: (value, record) => record.wh.indexOf(value) === 0,\n  }, {\n    title: 'Question',\n    dataIndex: 'question',\n    key: 'question',\n  }, {\n    title: 'Answer',\n    dataIndex: 'answer',\n    key: 'answer',\n  },\n  {\n    title: 'Action',\n    key: 'action',\n    render: (_, { id }) => <Button icon=\"delete\" type=\"danger\" onClick={confirmDelete(id)} />,\n  }];\n\n  return (\n    <div>\n      <Modal\n        destroyOnClose\n        centered\n        bodyStyle={{ maxHeight: 650, overflowY: 'scroll' }}\n        visible={modalVisible}\n        footer={null}\n        onCancel={() => { setModalVisible(false) }}\n      >\n        <DataForm db={db} mode=\"edit\" data={data} closeModal={() => { setModalVisible(false) }} />\n      </Modal>\n      <Table\n        dataSource={dataSource}\n        columns={columns}\n        pagination={{ pageSize: 8 }}\n        loading={loading}\n        onRow={(record) => ({\n          onDoubleClick: () => {\n            setData(record)\n            setModalVisible(true)\n          }\n        })}\n      />\n    </div>\n  )\n}\n\nexport default DataTable\n","import React from 'react'\r\nimport { Tabs, Progress } from 'antd'\r\n\r\nimport { whWords, categories } from \"./shared\";\r\n\r\nconst { TabPane } = Tabs\r\n\r\nconst ProgressTab = (props) => {\r\n    const { values, numbers } = props\r\n    return (\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <div>\r\n                {whWords[0]}: ({`${numbers[0]}`})\r\n                <Progress percent={values[0]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n            </div>\r\n            <div>\r\n                {whWords[1]}: ({`${numbers[1]}`}) \r\n                <Progress percent={values[1]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[2]}: ({`${numbers[2]}`}) \r\n                <Progress percent={values[2]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[3]}: ({`${numbers[3]}`}) \r\n                <Progress percent={values[3]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n            <div>\r\n                {whWords[4]}: ({`${numbers[4]}`}) \r\n                <Progress percent={values[4]} status={'active'} format={percent => `${percent.toFixed(2)} %`} />\r\n                </div>\r\n          </div>\r\n    )\r\n}\r\n\r\nconst DataDistribution = (props) => {\r\n\r\n    const {dataset} = props\r\n    \r\n    const whNum = dataset.reduce((acc, cur, i) => {\r\n        if (!acc[cur.categoryId+1]) {\r\n            acc[cur.categoryId+1] = [0, 0, 0, 0, 0]\r\n        }\r\n        acc[cur.categoryId+1][cur.whId] = acc[cur.categoryId+1][cur.whId] + 1\r\n        return acc\r\n    }, {})\r\n\r\n    whNum[0] = Object.keys(whNum).reduce((acc, cur, i) => {\r\n        for (let index = 0; index < 5; index++) {\r\n            acc[index] = acc[index] + whNum[cur][index]\r\n        }\r\n        return acc\r\n    }, [0, 0, 0, 0, 0])\r\n    \r\n    const progressTab = Object.keys(whNum).map((key, i) => {\r\n        let values = whNum[key]\r\n        const sumV = values.reduce((p, c, i) => {\r\n            return p + c\r\n        }, 0)\r\n        values = values.map(v => v/sumV*100)\r\n        let name = \"No Name\"\r\n        if (key === '0') {\r\n            name = 'All'\r\n        } else {\r\n            name = categories[key-1]\r\n        }\r\n\r\n        name = `${name} (${sumV})`\r\n        \r\n        return (\r\n            <TabPane tab={<span>{name}</span>} key={i}>\r\n                <ProgressTab values={values} numbers={whNum[key]} />\r\n            </TabPane>\r\n        )\r\n    })\r\n    return (\r\n        <Tabs defaultActiveKey=\"0\">\r\n            {progressTab}\r\n        </Tabs>\r\n    )\r\n}\r\n\r\nexport default DataDistribution","import React, { Component } from 'react'\r\nimport firebase from 'firebase'\r\nimport { Tabs, Icon, Button } from 'antd'\r\nimport DataForm from './DataForm'\r\nimport DataTable from './DataTable'\r\nimport DataDistribution from './DataDistribution'\r\nimport { saveFile, jsonToCSV } from './shared'\r\n\r\nconst { TabPane } = Tabs\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const config = {\r\n      apiKey: \"AIzaSyAeaMv3Y2fp877wzX187ZjT5-7AwxZkU0Y\",\r\n      authDomain: \"datasetters.firebaseapp.com\",\r\n      databaseURL: \"https://datasetters.firebaseio.com\",\r\n      projectId: \"datasetters\",\r\n      storageBucket: \"datasetters.appspot.com\",\r\n      messagingSenderId: \"340269058452\"\r\n    }\r\n    firebase.initializeApp(config)\r\n    this.db = firebase.firestore()\r\n    this.state = {\r\n      dataset: [],\r\n      loading: true,\r\n      downloading: {\r\n        json: false,\r\n        csv: false\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.db.collection('dataset').onSnapshot((querySnapshot) => {\r\n      this.setState({ loading: true })\r\n      const dataset = []\r\n      querySnapshot.forEach((doc) => {\r\n        dataset.push({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        })\r\n      })\r\n      this.setState({ dataset, loading: false })\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  handleDownload(type) {\r\n    const { downloading, dataset } = this.state\r\n    const isDownloading = downloading[type]\r\n    if (isDownloading) return\r\n    downloading[type] = true\r\n    this.setState({downloading})\r\n    if (type === 'json') {\r\n\r\n      let data = JSON.stringify(dataset)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"json\"\r\n      const contentType = \"application/json;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    } else if (type === 'csv') {\r\n\r\n      let data = jsonToCSV(dataset, true)\r\n      console.log(data)\r\n      const fileName = \"dataset\";\r\n      const ext = \"csv\"\r\n      const contentType = \"text/csv;charset=utf-8;\";\r\n      saveFile(data, contentType, fileName, ext)\r\n\r\n    }\r\n    downloading[type] = false\r\n    this.setState({downloading})\r\n  }\r\n\r\n  render() {\r\n    const { dataset, loading, downloading } = this.state\r\n    const dataSource = dataset.map((data, index) => ({\r\n      ...data,\r\n      key: index\r\n    }))\r\n    return (\r\n      <div className=\"App\">\r\n      <Tabs defaultActiveKey=\"1\">\r\n        <TabPane tab={<span><Icon type=\"database\" />Data Table</span>} key=\"1\">\r\n          <div style={{ padding: '20px 30px' }}>\r\n            <h1>\r\n              Dataset\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn json-btn\" onClick={(e) => this.handleDownload('json')} loading={downloading['json']}>JSON</Button>\r\n              <Button type=\"primary\" shape=\"round\" icon=\"download\" size=\"large\" className=\"download-btn csv-btn\" onClick={(e) => this.handleDownload('csv')} loading={downloading['csv']}>CSV</Button>\r\n            </h1>\r\n            <DataTable dataSource={dataSource} loading={loading} db={this.db} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"file-add\" />Add Data</span>} key=\"2\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Add Data</h1>\r\n            <DataForm db={this.db} />\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab={<span><Icon type=\"bar-chart\" />Data Distribution</span>} key=\"3\">\r\n          <div style={{ padding: '20px 100px' }}>\r\n            <h1>Data Distribution</h1>\r\n            <DataDistribution dataset={dataset} />\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport 'antd/dist/antd.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}